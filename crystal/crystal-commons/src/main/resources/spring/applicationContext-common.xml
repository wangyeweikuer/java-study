<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"
	default-autowire="no" default-lazy-init="false">
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="connectionInitSqls">
			<list>
				<value>select now();</value>
			</list>
		</property>
		<property name="url" value="${jdbc.url}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="password" value="${jdbc.password}" />
		<property name="username" value="${jdbc.username}" />
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<aop:config>
		<aop:pointcut id="Services" expression="(execution(* org.wangye.crystal.commons.service.*.*(..)) )" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="Services" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"  />
			<tx:method name="find*" read-only="true" />
			<tx:method name="can*" read-only="true" />
			<tx:method name="*" read-only="false" propagation="REQUIRED" isolation="DEFAULT" />
		</tx:attributes>
	</tx:advice>
	<!-- 这样可以支持annotation的事务配置了 added by wangye -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<context:component-scan base-package="org.wangye.crystal.commons.service" />
	<context:component-scan base-package="org.wangye.crystal.commons.dao" />

<!-- 	<bean id="environment" class="org.apache.ibatis.mapping.Environment">
		<constructor-arg name="id" value="e1" />
		<constructor-arg name="transactionFactory">
			<bean class="org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory" />
		</constructor-arg>
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>
	<bean id="builder" class="org.wangye.crystal.commons.dao.FactoryBuilder">
		<constructor-arg name="configClassPath" value="mybatis/Config.xml" />
		<constructor-arg name="environment" ref="environment" />
	</bean> -->
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/Config.xml" />
	</bean>
	
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.wangye.crystal.commons.dao" />
	</bean>
</beans>
